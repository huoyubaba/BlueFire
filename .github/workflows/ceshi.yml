#=================================================
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: kenzo
#=================================================

name: openwrt_19.07

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'
    
env:
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: newifi-d2@openwrt.config
  SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
  REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
  REMOTE_PORT: ${{ secrets.REMOTE_PORT }}
  DOCKER_ID: ${{ secrets.DOCKER_ID }}
  DOCKER_PASSWD: ${{ secrets.DOCKER_PASSWD }}  
  TZ: Asia/Shanghai
    
jobs:
  build:
    runs-on: Ubuntu-20.04   
    if: github.event.repository.owner.id == github.event.sender.id

    name: Build ${{matrix.target}}
    strategy:
      fail-fast: false
      matrix:
        target: [21]
    
    steps:
    - name: 检查
      uses: actions/checkout@main

    - name: 初始化环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 python2.7 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx-ucl libelf-dev autoconf automake libtool autopoint device-tree-compiler ccache xsltproc rename antlr3 gperf wget curl swig rsync
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
    - name: 设置当前的日期
      id: date
      run: |
        echo "date=$(date +'%Y.%m.%d-%H%M')" >> $GITHUB_ENV
        echo "date2=$(date +'%m/%d %Y')" >> $GITHUB_ENV
        echo "date3=$(date +'%m.%d')" >> $GITHUB_ENV
        echo "date4=$(date +'%m.%d.%H')" >> $GITHUB_ENV
        echo "DOCKERTAG=${{ secrets.DOCKER_ID }}/openwrt-6p:latest" >> $GITHUB_ENV
        VERSION="$(echo "${{github.event.action}}" | grep -Eo " [0-9.]+" | sed -e 's/ //')" || true
        [ "$VERSION" ] && echo "VERSION=$VERSION" >> $GITHUB_ENV || echo "VERSION=$(date +'%m.%d')" >> $GITHUB_ENV      
    - name: 克隆源代码
      env: 
        REPO_URL: https://github.com/openwrt/openwrt
        REPO_BRANCH: openwrt-19.07
       
      run: |
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
        cd openwrt
        echo "src-git ssrp https://github.com/fw876/helloworld.git" >> ./feeds.conf.default
        
    - name: 加载自定义源
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        chmod +x $DIY_P1_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P1_SH

    - name: 更新源
      run: cd openwrt && ./scripts/feeds update -a

    - name: 安装源
      run: cd openwrt && ./scripts/feeds install -a

    - name: 加载自定义配置
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_P2_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P2_SH

    - name: 下载包文件
      working-directory: ./openwrt
      run: |
        make download -j$(nproc)
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: 设置缓存
      uses: klever1988/cachewrtbuild@main
      with:
        ccache: 'true'
        prefix: ${{ github.workspace }}/openwrt

    - name: 编译固件
      working-directory: ./openwrt
      run: |
        echo -e "$(($(nproc)+1)) thread compile"
        make -j$(($(nproc)+1)) || make -j1 V=s
        echo "::set-output name=status::success"        
     
    - name: 检查空间使用情况
      if: (!cancelled())
      run: df -hT

    - name: 上传bin目录
      uses: actions/upload-artifact@main
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: OpenWrt_bin${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: openwrt/bin

    - name: 整理文件
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        mkdir firmware
        mv -f openwrt/bin/targets/*/*/{*combined*,*sysupgrade*} ./firmware/ 2>/dev/null || true
        cp openwrt/.config  ./firmware/${{matrix.target}}.config
        cp openwrt/build_dir/target-*/linux-*/linux-*/.config ./firmware/${{matrix.target}}_kernel.config
        cd firmware
        echo "v${{ env.date4 }}" > version.txt
        md5=$((md5sum *squashfs-sysupgrade* || md5sum *squashfs-combined-efi*) | awk '{print $1}') 2>/dev/null
        echo $md5 >> version.txt
        rename -v "s/^immortalwrt/${{ env.VERSION }}-openwrt/" * || true
        rename -v "s/friendlyarm_//" *gz
        echo $md5 >> version.txt
        echo ${{matrix.target}} >> version.txt     
        rm -rf sha256sums
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
                 
    - name: 上传固件目录
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: ${{ env.date3 }} _${{matrix.target}}
        path: ${{ env.FIRMWARE }}
        
    - name: 生成发布标签
      id: tag
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      run: |
        echo -e "墙内外加速下载 ??:\n" >> release.txt
        echo -e "[kenzo] (https://op.dllkids.xyz/op/)\n" >> release.txt
        touch release.txt
        [ $UPLOAD_COWTRANSFER = true ] && echo "?? [Cowtransfer](${{ steps.cowtransfer.outputs.url }})" >> release.txt
        [ $UPLOAD_WETRANSFER = true ] && echo "?? [WeTransfer](${{ steps.wetransfer.outputs.url }})" >> release.txt
        echo "::set-output name=status::success"
    - name: 上传固件发布
      uses: softprops/action-gh-release@v1
      if: steps.tag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
      with:
        files: "${{ env.FIRMWARE }}/*"
        name: ${{ env.date2 }} ${{matrix.target}}
        tag_name: ${{ env.date }}_${{matrix.target}}
        body_path: release.txt

    - name: 删除工作流
      uses: GitRML/delete-workflow-runs@main
      with:
        retain_days: 1
        keep_minimum_runs: 0

    - name: 删除旧版本
      uses: dev-drprasad/delete-older-releases@v0.1.0
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      with:
        keep_latest: 10
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
